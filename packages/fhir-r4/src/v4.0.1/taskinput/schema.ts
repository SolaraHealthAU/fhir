import { z } from "zod/v4";
import * as types from "./types";
import * as primitives from "../primitives";
import { getCachedSchema } from "../schema-cache";
import {
  createExtensionSchema,
  createCodeableConceptSchema,
  createElementSchema,
  createAddressSchema,
  createAgeSchema,
  createAnnotationSchema,
  createAttachmentSchema,
  createCodingSchema,
  createContactPointSchema,
  createCountSchema,
  createDistanceSchema,
  createDurationSchema,
  createHumanNameSchema,
  createIdentifierSchema,
  createMoneySchema,
  createPeriodSchema,
  createQuantitySchema,
  createRangeSchema,
  createRatioSchema,
  createReferenceSchema,
  createSampledDataSchema,
  createSignatureSchema,
  createTimingSchema,
  createContactDetailSchema,
  createContributorSchema,
  createDataRequirementSchema,
  createExpressionSchema,
  createParameterDefinitionSchema,
  createRelatedArtifactSchema,
  createTriggerDefinitionSchema,
  createUsageContextSchema,
  createDosageSchema,
  createMetaSchema,
} from "../core/schema";

/* Generated from FHIR JSON Schema */

export function createTaskInputSchema() {
  return getCachedSchema("TaskInput", () => {
    const baseSchema: z.ZodType<types.TaskInput> = z.strictObject({
      id: primitives.getStringSchema().optional(),
      extension: z.array(z.lazy(() => createExtensionSchema())).optional(),
      modifierExtension: z
        .array(z.lazy(() => createExtensionSchema()))
        .optional(),
      type: createCodeableConceptSchema(),
      valueBase64Binary: z.string().optional(),
      _valueBase64Binary: z.lazy(() => createElementSchema()).optional(),
      valueBoolean: z.boolean().optional(),
      _valueBoolean: z.lazy(() => createElementSchema()).optional(),
      valueCanonical: z.string().optional(),
      _valueCanonical: z.lazy(() => createElementSchema()).optional(),
      valueCode: z.string().optional(),
      _valueCode: z.lazy(() => createElementSchema()).optional(),
      valueDate: z.string().optional(),
      _valueDate: z.lazy(() => createElementSchema()).optional(),
      valueDateTime: z.string().optional(),
      _valueDateTime: z.lazy(() => createElementSchema()).optional(),
      valueDecimal: z.number().optional(),
      _valueDecimal: z.lazy(() => createElementSchema()).optional(),
      valueId: z.string().optional(),
      _valueId: z.lazy(() => createElementSchema()).optional(),
      valueInstant: z.string().optional(),
      _valueInstant: z.lazy(() => createElementSchema()).optional(),
      valueInteger: z.number().optional(),
      _valueInteger: z.lazy(() => createElementSchema()).optional(),
      valueMarkdown: z.string().optional(),
      _valueMarkdown: z.lazy(() => createElementSchema()).optional(),
      valueOid: z.string().optional(),
      _valueOid: z.lazy(() => createElementSchema()).optional(),
      valuePositiveInt: z.number().optional(),
      _valuePositiveInt: z.lazy(() => createElementSchema()).optional(),
      valueString: z.string().optional(),
      _valueString: z.lazy(() => createElementSchema()).optional(),
      valueTime: z.string().optional(),
      _valueTime: z.lazy(() => createElementSchema()).optional(),
      valueUnsignedInt: z.number().optional(),
      _valueUnsignedInt: z.lazy(() => createElementSchema()).optional(),
      valueUri: z.string().optional(),
      _valueUri: z.lazy(() => createElementSchema()).optional(),
      valueUrl: z.string().optional(),
      _valueUrl: z.lazy(() => createElementSchema()).optional(),
      valueUuid: z.string().optional(),
      _valueUuid: z.lazy(() => createElementSchema()).optional(),
      valueAddress: createAddressSchema().optional(),
      valueAge: createAgeSchema().optional(),
      valueAnnotation: createAnnotationSchema().optional(),
      valueAttachment: createAttachmentSchema().optional(),
      valueCodeableConcept: createCodeableConceptSchema().optional(),
      valueCoding: createCodingSchema().optional(),
      valueContactPoint: createContactPointSchema().optional(),
      valueCount: createCountSchema().optional(),
      valueDistance: createDistanceSchema().optional(),
      valueDuration: createDurationSchema().optional(),
      valueHumanName: createHumanNameSchema().optional(),
      valueIdentifier: z.lazy(() => createIdentifierSchema()).optional(),
      valueMoney: createMoneySchema().optional(),
      valuePeriod: createPeriodSchema().optional(),
      valueQuantity: createQuantitySchema().optional(),
      valueRange: createRangeSchema().optional(),
      valueRatio: createRatioSchema().optional(),
      valueReference: createReferenceSchema().optional(),
      valueSampledData: createSampledDataSchema().optional(),
      valueSignature: createSignatureSchema().optional(),
      valueTiming: createTimingSchema().optional(),
      valueContactDetail: createContactDetailSchema().optional(),
      valueContributor: createContributorSchema().optional(),
      valueDataRequirement: createDataRequirementSchema().optional(),
      valueExpression: createExpressionSchema().optional(),
      valueParameterDefinition: createParameterDefinitionSchema().optional(),
      valueRelatedArtifact: createRelatedArtifactSchema().optional(),
      valueTriggerDefinition: createTriggerDefinitionSchema().optional(),
      valueUsageContext: createUsageContextSchema().optional(),
      valueDosage: createDosageSchema().optional(),
      valueMeta: createMetaSchema().optional(),
    });

    return baseSchema;
  });
}
