import { z } from "zod/v4";
import * as types from "./types";
import * as primitives from "../primitives";
import { getCachedSchema } from "../schema-cache";
import {
  createExtensionSchema,
  createElementSchema,
  createAddressSchema,
  createAgeSchema,
  createAnnotationSchema,
  createAttachmentSchema,
  createCodeableConceptSchema,
  createCodingSchema,
  createContactPointSchema,
  createCountSchema,
  createDistanceSchema,
  createDurationSchema,
  createHumanNameSchema,
  createIdentifierSchema,
  createMoneySchema,
  createPeriodSchema,
  createQuantitySchema,
  createRangeSchema,
  createRatioSchema,
  createReferenceSchema,
  createSampledDataSchema,
  createSignatureSchema,
  createTimingSchema,
  createContactDetailSchema,
  createContributorSchema,
  createDataRequirementSchema,
  createExpressionSchema,
  createParameterDefinitionSchema,
  createRelatedArtifactSchema,
  createTriggerDefinitionSchema,
  createUsageContextSchema,
  createDosageSchema,
  createMetaSchema,
} from "../core/schema";

/* Generated from FHIR JSON Schema */

export function createStructureMapSourceSchema() {
  return getCachedSchema("StructureMapSource", () => {
    const baseSchema: z.ZodType<types.StructureMapSource> = z.strictObject({
      id: primitives.getStringSchema().optional(),
      extension: z.array(z.lazy(() => createExtensionSchema())).optional(),
      modifierExtension: z
        .array(z.lazy(() => createExtensionSchema()))
        .optional(),
      context: primitives.getIdSchema().optional(),
      _context: z.lazy(() => createElementSchema()).optional(),
      min: primitives.getIntegerSchema().optional(),
      _min: z.lazy(() => createElementSchema()).optional(),
      max: primitives.getStringSchema().optional(),
      _max: z.lazy(() => createElementSchema()).optional(),
      type: primitives.getStringSchema().optional(),
      _type: z.lazy(() => createElementSchema()).optional(),
      defaultValueBase64Binary: z.string().optional(),
      _defaultValueBase64Binary: z.lazy(() => createElementSchema()).optional(),
      defaultValueBoolean: z.boolean().optional(),
      _defaultValueBoolean: z.lazy(() => createElementSchema()).optional(),
      defaultValueCanonical: z.string().optional(),
      _defaultValueCanonical: z.lazy(() => createElementSchema()).optional(),
      defaultValueCode: z.string().optional(),
      _defaultValueCode: z.lazy(() => createElementSchema()).optional(),
      defaultValueDate: z.string().optional(),
      _defaultValueDate: z.lazy(() => createElementSchema()).optional(),
      defaultValueDateTime: z.string().optional(),
      _defaultValueDateTime: z.lazy(() => createElementSchema()).optional(),
      defaultValueDecimal: z.number().optional(),
      _defaultValueDecimal: z.lazy(() => createElementSchema()).optional(),
      defaultValueId: z.string().optional(),
      _defaultValueId: z.lazy(() => createElementSchema()).optional(),
      defaultValueInstant: z.string().optional(),
      _defaultValueInstant: z.lazy(() => createElementSchema()).optional(),
      defaultValueInteger: z.number().optional(),
      _defaultValueInteger: z.lazy(() => createElementSchema()).optional(),
      defaultValueMarkdown: z.string().optional(),
      _defaultValueMarkdown: z.lazy(() => createElementSchema()).optional(),
      defaultValueOid: z.string().optional(),
      _defaultValueOid: z.lazy(() => createElementSchema()).optional(),
      defaultValuePositiveInt: z.number().optional(),
      _defaultValuePositiveInt: z.lazy(() => createElementSchema()).optional(),
      defaultValueString: z.string().optional(),
      _defaultValueString: z.lazy(() => createElementSchema()).optional(),
      defaultValueTime: z.string().optional(),
      _defaultValueTime: z.lazy(() => createElementSchema()).optional(),
      defaultValueUnsignedInt: z.number().optional(),
      _defaultValueUnsignedInt: z.lazy(() => createElementSchema()).optional(),
      defaultValueUri: z.string().optional(),
      _defaultValueUri: z.lazy(() => createElementSchema()).optional(),
      defaultValueUrl: z.string().optional(),
      _defaultValueUrl: z.lazy(() => createElementSchema()).optional(),
      defaultValueUuid: z.string().optional(),
      _defaultValueUuid: z.lazy(() => createElementSchema()).optional(),
      defaultValueAddress: createAddressSchema().optional(),
      defaultValueAge: createAgeSchema().optional(),
      defaultValueAnnotation: createAnnotationSchema().optional(),
      defaultValueAttachment: createAttachmentSchema().optional(),
      defaultValueCodeableConcept: createCodeableConceptSchema().optional(),
      defaultValueCoding: createCodingSchema().optional(),
      defaultValueContactPoint: createContactPointSchema().optional(),
      defaultValueCount: createCountSchema().optional(),
      defaultValueDistance: createDistanceSchema().optional(),
      defaultValueDuration: createDurationSchema().optional(),
      defaultValueHumanName: createHumanNameSchema().optional(),
      defaultValueIdentifier: z.lazy(() => createIdentifierSchema()).optional(),
      defaultValueMoney: createMoneySchema().optional(),
      defaultValuePeriod: createPeriodSchema().optional(),
      defaultValueQuantity: createQuantitySchema().optional(),
      defaultValueRange: createRangeSchema().optional(),
      defaultValueRatio: createRatioSchema().optional(),
      defaultValueReference: createReferenceSchema().optional(),
      defaultValueSampledData: createSampledDataSchema().optional(),
      defaultValueSignature: createSignatureSchema().optional(),
      defaultValueTiming: createTimingSchema().optional(),
      defaultValueContactDetail: createContactDetailSchema().optional(),
      defaultValueContributor: createContributorSchema().optional(),
      defaultValueDataRequirement: createDataRequirementSchema().optional(),
      defaultValueExpression: createExpressionSchema().optional(),
      defaultValueParameterDefinition:
        createParameterDefinitionSchema().optional(),
      defaultValueRelatedArtifact: createRelatedArtifactSchema().optional(),
      defaultValueTriggerDefinition: createTriggerDefinitionSchema().optional(),
      defaultValueUsageContext: createUsageContextSchema().optional(),
      defaultValueDosage: createDosageSchema().optional(),
      defaultValueMeta: createMetaSchema().optional(),
      element: primitives.getStringSchema().optional(),
      _element: z.lazy(() => createElementSchema()).optional(),
      listMode: z
        .enum(["first", "not_first", "last", "not_last", "only_one"])
        .optional(),
      _listMode: z.lazy(() => createElementSchema()).optional(),
      variable: primitives.getIdSchema().optional(),
      _variable: z.lazy(() => createElementSchema()).optional(),
      condition: primitives.getStringSchema().optional(),
      _condition: z.lazy(() => createElementSchema()).optional(),
      check: primitives.getStringSchema().optional(),
      _check: z.lazy(() => createElementSchema()).optional(),
      logMessage: primitives.getStringSchema().optional(),
      _logMessage: z.lazy(() => createElementSchema()).optional(),
    });

    return baseSchema;
  });
}
