import { z } from "zod";
import * as types from "./types";
import * as primitives from "../primitives";
import {
  createExtensionSchema,
  createElementSchema,
  createCodingSchema,
  createAddressSchema,
  createAgeSchema,
  createAnnotationSchema,
  createAttachmentSchema,
  createCodeableConceptSchema,
  createContactPointSchema,
  createCountSchema,
  createDistanceSchema,
  createDurationSchema,
  createHumanNameSchema,
  createIdentifierSchema,
  createMoneySchema,
  createPeriodSchema,
  createQuantitySchema,
  createRangeSchema,
  createRatioSchema,
  createReferenceSchema,
  createSampledDataSchema,
  createSignatureSchema,
  createTimingSchema,
  createContactDetailSchema,
  createContributorSchema,
  createDataRequirementSchema,
  createExpressionSchema,
  createParameterDefinitionSchema,
  createRelatedArtifactSchema,
  createTriggerDefinitionSchema,
  createUsageContextSchema,
  createDosageSchema,
  createMetaSchema,
} from "../core/schema";
import { createElementDefinitionSlicingSchema } from "../elementdefinitionslicing/schema";
import { createElementDefinitionBaseSchema } from "../elementdefinitionbase/schema";
import { createElementDefinitionTypeSchema } from "../elementdefinitiontype/schema";
import { createElementDefinitionExampleSchema } from "../elementdefinitionexample/schema";
import { createElementDefinitionConstraintSchema } from "../elementdefinitionconstraint/schema";
import { createElementDefinitionBindingSchema } from "../elementdefinitionbinding/schema";
import { createElementDefinitionMappingSchema } from "../elementdefinitionmapping/schema";

/* Generated from FHIR JSON Schema */

export function createElementDefinitionSchema() {
  const baseSchema: z.ZodType<types.ElementDefinition> = z.object({
    id: primitives.createStringSchema().optional(),
    extension: z.array(z.lazy(() => createExtensionSchema())).optional(),
    modifierExtension: z
      .array(z.lazy(() => createExtensionSchema()))
      .optional(),
    path: primitives.createStringSchema(),
    _path: z.lazy(() => createElementSchema()).optional(),
    representation: z.array(z.any()).optional(),
    _representation: z.array(z.lazy(() => createElementSchema())).optional(),
    sliceName: primitives.createStringSchema().optional(),
    _sliceName: z.lazy(() => createElementSchema()).optional(),
    sliceIsConstraining: primitives.createBooleanSchema().optional(),
    _sliceIsConstraining: z.lazy(() => createElementSchema()).optional(),
    label: primitives.createStringSchema().optional(),
    _label: z.lazy(() => createElementSchema()).optional(),
    code: z.array(z.lazy(() => createCodingSchema())).optional(),
    slicing: z.lazy(() => createElementDefinitionSlicingSchema()).optional(),
    short: primitives.createStringSchema().optional(),
    _short: z.lazy(() => createElementSchema()).optional(),
    definition: primitives.createMarkdownSchema().optional(),
    _definition: z.lazy(() => createElementSchema()).optional(),
    comment: primitives.createMarkdownSchema().optional(),
    _comment: z.lazy(() => createElementSchema()).optional(),
    requirements: primitives.createMarkdownSchema().optional(),
    _requirements: z.lazy(() => createElementSchema()).optional(),
    alias: z.array(primitives.createStringSchema()).optional(),
    _alias: z.array(z.lazy(() => createElementSchema())).optional(),
    min: primitives.createUnsignedIntSchema().optional(),
    _min: z.lazy(() => createElementSchema()).optional(),
    max: primitives.createStringSchema().optional(),
    _max: z.lazy(() => createElementSchema()).optional(),
    base: z.lazy(() => createElementDefinitionBaseSchema()).optional(),
    contentReference: primitives.createUriSchema().optional(),
    _contentReference: z.lazy(() => createElementSchema()).optional(),
    type: z.array(z.lazy(() => createElementDefinitionTypeSchema())).optional(),
    defaultValueBase64Binary: z.string().optional(),
    _defaultValueBase64Binary: z.lazy(() => createElementSchema()).optional(),
    defaultValueBoolean: z.boolean().optional(),
    _defaultValueBoolean: z.lazy(() => createElementSchema()).optional(),
    defaultValueCanonical: z.string().optional(),
    _defaultValueCanonical: z.lazy(() => createElementSchema()).optional(),
    defaultValueCode: z.string().optional(),
    _defaultValueCode: z.lazy(() => createElementSchema()).optional(),
    defaultValueDate: z.string().optional(),
    _defaultValueDate: z.lazy(() => createElementSchema()).optional(),
    defaultValueDateTime: z.string().optional(),
    _defaultValueDateTime: z.lazy(() => createElementSchema()).optional(),
    defaultValueDecimal: z.number().optional(),
    _defaultValueDecimal: z.lazy(() => createElementSchema()).optional(),
    defaultValueId: z.string().optional(),
    _defaultValueId: z.lazy(() => createElementSchema()).optional(),
    defaultValueInstant: z.string().optional(),
    _defaultValueInstant: z.lazy(() => createElementSchema()).optional(),
    defaultValueInteger: z.number().optional(),
    _defaultValueInteger: z.lazy(() => createElementSchema()).optional(),
    defaultValueMarkdown: z.string().optional(),
    _defaultValueMarkdown: z.lazy(() => createElementSchema()).optional(),
    defaultValueOid: z.string().optional(),
    _defaultValueOid: z.lazy(() => createElementSchema()).optional(),
    defaultValuePositiveInt: z.number().optional(),
    _defaultValuePositiveInt: z.lazy(() => createElementSchema()).optional(),
    defaultValueString: z.string().optional(),
    _defaultValueString: z.lazy(() => createElementSchema()).optional(),
    defaultValueTime: z.string().optional(),
    _defaultValueTime: z.lazy(() => createElementSchema()).optional(),
    defaultValueUnsignedInt: z.number().optional(),
    _defaultValueUnsignedInt: z.lazy(() => createElementSchema()).optional(),
    defaultValueUri: z.string().optional(),
    _defaultValueUri: z.lazy(() => createElementSchema()).optional(),
    defaultValueUrl: z.string().optional(),
    _defaultValueUrl: z.lazy(() => createElementSchema()).optional(),
    defaultValueUuid: z.string().optional(),
    _defaultValueUuid: z.lazy(() => createElementSchema()).optional(),
    defaultValueAddress: z.lazy(() => createAddressSchema()).optional(),
    defaultValueAge: z.lazy(() => createAgeSchema()).optional(),
    defaultValueAnnotation: z.lazy(() => createAnnotationSchema()).optional(),
    defaultValueAttachment: z.lazy(() => createAttachmentSchema()).optional(),
    defaultValueCodeableConcept: z
      .lazy(() => createCodeableConceptSchema())
      .optional(),
    defaultValueCoding: z.lazy(() => createCodingSchema()).optional(),
    defaultValueContactPoint: z
      .lazy(() => createContactPointSchema())
      .optional(),
    defaultValueCount: z.lazy(() => createCountSchema()).optional(),
    defaultValueDistance: z.lazy(() => createDistanceSchema()).optional(),
    defaultValueDuration: z.lazy(() => createDurationSchema()).optional(),
    defaultValueHumanName: z.lazy(() => createHumanNameSchema()).optional(),
    defaultValueIdentifier: z.lazy(() => createIdentifierSchema()).optional(),
    defaultValueMoney: z.lazy(() => createMoneySchema()).optional(),
    defaultValuePeriod: z.lazy(() => createPeriodSchema()).optional(),
    defaultValueQuantity: z.lazy(() => createQuantitySchema()).optional(),
    defaultValueRange: z.lazy(() => createRangeSchema()).optional(),
    defaultValueRatio: z.lazy(() => createRatioSchema()).optional(),
    defaultValueReference: z.lazy(() => createReferenceSchema()).optional(),
    defaultValueSampledData: z.lazy(() => createSampledDataSchema()).optional(),
    defaultValueSignature: z.lazy(() => createSignatureSchema()).optional(),
    defaultValueTiming: z.lazy(() => createTimingSchema()).optional(),
    defaultValueContactDetail: z
      .lazy(() => createContactDetailSchema())
      .optional(),
    defaultValueContributor: z.lazy(() => createContributorSchema()).optional(),
    defaultValueDataRequirement: z
      .lazy(() => createDataRequirementSchema())
      .optional(),
    defaultValueExpression: z.lazy(() => createExpressionSchema()).optional(),
    defaultValueParameterDefinition: z
      .lazy(() => createParameterDefinitionSchema())
      .optional(),
    defaultValueRelatedArtifact: z
      .lazy(() => createRelatedArtifactSchema())
      .optional(),
    defaultValueTriggerDefinition: z
      .lazy(() => createTriggerDefinitionSchema())
      .optional(),
    defaultValueUsageContext: z
      .lazy(() => createUsageContextSchema())
      .optional(),
    defaultValueDosage: z.lazy(() => createDosageSchema()).optional(),
    defaultValueMeta: z.lazy(() => createMetaSchema()).optional(),
    meaningWhenMissing: primitives.createMarkdownSchema().optional(),
    _meaningWhenMissing: z.lazy(() => createElementSchema()).optional(),
    orderMeaning: primitives.createStringSchema().optional(),
    _orderMeaning: z.lazy(() => createElementSchema()).optional(),
    fixedBase64Binary: z.string().optional(),
    _fixedBase64Binary: z.lazy(() => createElementSchema()).optional(),
    fixedBoolean: z.boolean().optional(),
    _fixedBoolean: z.lazy(() => createElementSchema()).optional(),
    fixedCanonical: z.string().optional(),
    _fixedCanonical: z.lazy(() => createElementSchema()).optional(),
    fixedCode: z.string().optional(),
    _fixedCode: z.lazy(() => createElementSchema()).optional(),
    fixedDate: z.string().optional(),
    _fixedDate: z.lazy(() => createElementSchema()).optional(),
    fixedDateTime: z.string().optional(),
    _fixedDateTime: z.lazy(() => createElementSchema()).optional(),
    fixedDecimal: z.number().optional(),
    _fixedDecimal: z.lazy(() => createElementSchema()).optional(),
    fixedId: z.string().optional(),
    _fixedId: z.lazy(() => createElementSchema()).optional(),
    fixedInstant: z.string().optional(),
    _fixedInstant: z.lazy(() => createElementSchema()).optional(),
    fixedInteger: z.number().optional(),
    _fixedInteger: z.lazy(() => createElementSchema()).optional(),
    fixedMarkdown: z.string().optional(),
    _fixedMarkdown: z.lazy(() => createElementSchema()).optional(),
    fixedOid: z.string().optional(),
    _fixedOid: z.lazy(() => createElementSchema()).optional(),
    fixedPositiveInt: z.number().optional(),
    _fixedPositiveInt: z.lazy(() => createElementSchema()).optional(),
    fixedString: z.string().optional(),
    _fixedString: z.lazy(() => createElementSchema()).optional(),
    fixedTime: z.string().optional(),
    _fixedTime: z.lazy(() => createElementSchema()).optional(),
    fixedUnsignedInt: z.number().optional(),
    _fixedUnsignedInt: z.lazy(() => createElementSchema()).optional(),
    fixedUri: z.string().optional(),
    _fixedUri: z.lazy(() => createElementSchema()).optional(),
    fixedUrl: z.string().optional(),
    _fixedUrl: z.lazy(() => createElementSchema()).optional(),
    fixedUuid: z.string().optional(),
    _fixedUuid: z.lazy(() => createElementSchema()).optional(),
    fixedAddress: z.lazy(() => createAddressSchema()).optional(),
    fixedAge: z.lazy(() => createAgeSchema()).optional(),
    fixedAnnotation: z.lazy(() => createAnnotationSchema()).optional(),
    fixedAttachment: z.lazy(() => createAttachmentSchema()).optional(),
    fixedCodeableConcept: z
      .lazy(() => createCodeableConceptSchema())
      .optional(),
    fixedCoding: z.lazy(() => createCodingSchema()).optional(),
    fixedContactPoint: z.lazy(() => createContactPointSchema()).optional(),
    fixedCount: z.lazy(() => createCountSchema()).optional(),
    fixedDistance: z.lazy(() => createDistanceSchema()).optional(),
    fixedDuration: z.lazy(() => createDurationSchema()).optional(),
    fixedHumanName: z.lazy(() => createHumanNameSchema()).optional(),
    fixedIdentifier: z.lazy(() => createIdentifierSchema()).optional(),
    fixedMoney: z.lazy(() => createMoneySchema()).optional(),
    fixedPeriod: z.lazy(() => createPeriodSchema()).optional(),
    fixedQuantity: z.lazy(() => createQuantitySchema()).optional(),
    fixedRange: z.lazy(() => createRangeSchema()).optional(),
    fixedRatio: z.lazy(() => createRatioSchema()).optional(),
    fixedReference: z.lazy(() => createReferenceSchema()).optional(),
    fixedSampledData: z.lazy(() => createSampledDataSchema()).optional(),
    fixedSignature: z.lazy(() => createSignatureSchema()).optional(),
    fixedTiming: z.lazy(() => createTimingSchema()).optional(),
    fixedContactDetail: z.lazy(() => createContactDetailSchema()).optional(),
    fixedContributor: z.lazy(() => createContributorSchema()).optional(),
    fixedDataRequirement: z
      .lazy(() => createDataRequirementSchema())
      .optional(),
    fixedExpression: z.lazy(() => createExpressionSchema()).optional(),
    fixedParameterDefinition: z
      .lazy(() => createParameterDefinitionSchema())
      .optional(),
    fixedRelatedArtifact: z
      .lazy(() => createRelatedArtifactSchema())
      .optional(),
    fixedTriggerDefinition: z
      .lazy(() => createTriggerDefinitionSchema())
      .optional(),
    fixedUsageContext: z.lazy(() => createUsageContextSchema()).optional(),
    fixedDosage: z.lazy(() => createDosageSchema()).optional(),
    fixedMeta: z.lazy(() => createMetaSchema()).optional(),
    patternBase64Binary: z.string().optional(),
    _patternBase64Binary: z.lazy(() => createElementSchema()).optional(),
    patternBoolean: z.boolean().optional(),
    _patternBoolean: z.lazy(() => createElementSchema()).optional(),
    patternCanonical: z.string().optional(),
    _patternCanonical: z.lazy(() => createElementSchema()).optional(),
    patternCode: z.string().optional(),
    _patternCode: z.lazy(() => createElementSchema()).optional(),
    patternDate: z.string().optional(),
    _patternDate: z.lazy(() => createElementSchema()).optional(),
    patternDateTime: z.string().optional(),
    _patternDateTime: z.lazy(() => createElementSchema()).optional(),
    patternDecimal: z.number().optional(),
    _patternDecimal: z.lazy(() => createElementSchema()).optional(),
    patternId: z.string().optional(),
    _patternId: z.lazy(() => createElementSchema()).optional(),
    patternInstant: z.string().optional(),
    _patternInstant: z.lazy(() => createElementSchema()).optional(),
    patternInteger: z.number().optional(),
    _patternInteger: z.lazy(() => createElementSchema()).optional(),
    patternMarkdown: z.string().optional(),
    _patternMarkdown: z.lazy(() => createElementSchema()).optional(),
    patternOid: z.string().optional(),
    _patternOid: z.lazy(() => createElementSchema()).optional(),
    patternPositiveInt: z.number().optional(),
    _patternPositiveInt: z.lazy(() => createElementSchema()).optional(),
    patternString: z.string().optional(),
    _patternString: z.lazy(() => createElementSchema()).optional(),
    patternTime: z.string().optional(),
    _patternTime: z.lazy(() => createElementSchema()).optional(),
    patternUnsignedInt: z.number().optional(),
    _patternUnsignedInt: z.lazy(() => createElementSchema()).optional(),
    patternUri: z.string().optional(),
    _patternUri: z.lazy(() => createElementSchema()).optional(),
    patternUrl: z.string().optional(),
    _patternUrl: z.lazy(() => createElementSchema()).optional(),
    patternUuid: z.string().optional(),
    _patternUuid: z.lazy(() => createElementSchema()).optional(),
    patternAddress: z.lazy(() => createAddressSchema()).optional(),
    patternAge: z.lazy(() => createAgeSchema()).optional(),
    patternAnnotation: z.lazy(() => createAnnotationSchema()).optional(),
    patternAttachment: z.lazy(() => createAttachmentSchema()).optional(),
    patternCodeableConcept: z
      .lazy(() => createCodeableConceptSchema())
      .optional(),
    patternCoding: z.lazy(() => createCodingSchema()).optional(),
    patternContactPoint: z.lazy(() => createContactPointSchema()).optional(),
    patternCount: z.lazy(() => createCountSchema()).optional(),
    patternDistance: z.lazy(() => createDistanceSchema()).optional(),
    patternDuration: z.lazy(() => createDurationSchema()).optional(),
    patternHumanName: z.lazy(() => createHumanNameSchema()).optional(),
    patternIdentifier: z.lazy(() => createIdentifierSchema()).optional(),
    patternMoney: z.lazy(() => createMoneySchema()).optional(),
    patternPeriod: z.lazy(() => createPeriodSchema()).optional(),
    patternQuantity: z.lazy(() => createQuantitySchema()).optional(),
    patternRange: z.lazy(() => createRangeSchema()).optional(),
    patternRatio: z.lazy(() => createRatioSchema()).optional(),
    patternReference: z.lazy(() => createReferenceSchema()).optional(),
    patternSampledData: z.lazy(() => createSampledDataSchema()).optional(),
    patternSignature: z.lazy(() => createSignatureSchema()).optional(),
    patternTiming: z.lazy(() => createTimingSchema()).optional(),
    patternContactDetail: z.lazy(() => createContactDetailSchema()).optional(),
    patternContributor: z.lazy(() => createContributorSchema()).optional(),
    patternDataRequirement: z
      .lazy(() => createDataRequirementSchema())
      .optional(),
    patternExpression: z.lazy(() => createExpressionSchema()).optional(),
    patternParameterDefinition: z
      .lazy(() => createParameterDefinitionSchema())
      .optional(),
    patternRelatedArtifact: z
      .lazy(() => createRelatedArtifactSchema())
      .optional(),
    patternTriggerDefinition: z
      .lazy(() => createTriggerDefinitionSchema())
      .optional(),
    patternUsageContext: z.lazy(() => createUsageContextSchema()).optional(),
    patternDosage: z.lazy(() => createDosageSchema()).optional(),
    patternMeta: z.lazy(() => createMetaSchema()).optional(),
    example: z
      .array(z.lazy(() => createElementDefinitionExampleSchema()))
      .optional(),
    minValueDate: z.string().optional(),
    _minValueDate: z.lazy(() => createElementSchema()).optional(),
    minValueDateTime: z.string().optional(),
    _minValueDateTime: z.lazy(() => createElementSchema()).optional(),
    minValueInstant: z.string().optional(),
    _minValueInstant: z.lazy(() => createElementSchema()).optional(),
    minValueTime: z.string().optional(),
    _minValueTime: z.lazy(() => createElementSchema()).optional(),
    minValueDecimal: z.number().optional(),
    _minValueDecimal: z.lazy(() => createElementSchema()).optional(),
    minValueInteger: z.number().optional(),
    _minValueInteger: z.lazy(() => createElementSchema()).optional(),
    minValuePositiveInt: z.number().optional(),
    _minValuePositiveInt: z.lazy(() => createElementSchema()).optional(),
    minValueUnsignedInt: z.number().optional(),
    _minValueUnsignedInt: z.lazy(() => createElementSchema()).optional(),
    minValueQuantity: z.lazy(() => createQuantitySchema()).optional(),
    maxValueDate: z.string().optional(),
    _maxValueDate: z.lazy(() => createElementSchema()).optional(),
    maxValueDateTime: z.string().optional(),
    _maxValueDateTime: z.lazy(() => createElementSchema()).optional(),
    maxValueInstant: z.string().optional(),
    _maxValueInstant: z.lazy(() => createElementSchema()).optional(),
    maxValueTime: z.string().optional(),
    _maxValueTime: z.lazy(() => createElementSchema()).optional(),
    maxValueDecimal: z.number().optional(),
    _maxValueDecimal: z.lazy(() => createElementSchema()).optional(),
    maxValueInteger: z.number().optional(),
    _maxValueInteger: z.lazy(() => createElementSchema()).optional(),
    maxValuePositiveInt: z.number().optional(),
    _maxValuePositiveInt: z.lazy(() => createElementSchema()).optional(),
    maxValueUnsignedInt: z.number().optional(),
    _maxValueUnsignedInt: z.lazy(() => createElementSchema()).optional(),
    maxValueQuantity: z.lazy(() => createQuantitySchema()).optional(),
    maxLength: primitives.createIntegerSchema().optional(),
    _maxLength: z.lazy(() => createElementSchema()).optional(),
    condition: z.array(primitives.createIdSchema()).optional(),
    _condition: z.array(z.lazy(() => createElementSchema())).optional(),
    constraint: z
      .array(z.lazy(() => createElementDefinitionConstraintSchema()))
      .optional(),
    mustSupport: primitives.createBooleanSchema().optional(),
    _mustSupport: z.lazy(() => createElementSchema()).optional(),
    isModifier: primitives.createBooleanSchema().optional(),
    _isModifier: z.lazy(() => createElementSchema()).optional(),
    isModifierReason: primitives.createStringSchema().optional(),
    _isModifierReason: z.lazy(() => createElementSchema()).optional(),
    isSummary: primitives.createBooleanSchema().optional(),
    _isSummary: z.lazy(() => createElementSchema()).optional(),
    binding: z.lazy(() => createElementDefinitionBindingSchema()).optional(),
    mapping: z
      .array(z.lazy(() => createElementDefinitionMappingSchema()))
      .optional(),
  });

  return baseSchema;
}
